# Data Pipeline Monitoring Automation Framework - Environment Configuration
# Copy this file to .env and fill in your actual values

# ===============================================================================
# LLM Configuration
# ===============================================================================
# Provider: openai, anthropic, or custom
LLM_PROVIDER=openai
# API key for your LLM provider
# Get from: https://platform.openai.com/api-keys
LLM_API_KEY=sk-your_openai_api_key_here
# Model to use for AI agents
LLM_MODEL=gpt-4
# Base URL for LLM API (usually default is fine)
LLM_BASE_URL=https://api.openai.com/v1

# ===============================================================================
# Airbyte Configuration
# ===============================================================================
# Airbyte API access token
# Get from: Airbyte UI -> Settings -> Account -> Applications -> Create Access Token
AIRBYTE_API_KEY=your_airbyte_access_token_here
# Airbyte API base URL (usually default is fine)
AIRBYTE_BASE_URL=https://api.airbyte.com/v1
# Optional: Your Airbyte workspace ID (can be found in Airbyte UI)
AIRBYTE_WORKSPACE_ID=your_workspace_id_here

# ===============================================================================
# Databricks Configuration
# ===============================================================================
# Databricks personal access token
# Get from: Databricks workspace -> User Settings -> Access Tokens -> Generate New Token
DATABRICKS_API_KEY=your_databricks_token_here
# Your Databricks workspace URL (e.g., https://your-workspace.cloud.databricks.com)
DATABRICKS_BASE_URL=https://your-workspace.cloud.databricks.com
# Optional: Workspace ID (can be found in workspace URL)
DATABRICKS_WORKSPACE_ID=your_workspace_id_here

# ===============================================================================
# Power Automate (Microsoft Graph) Configuration
# ===============================================================================
# Azure AD App Registration credentials
# Get from: Azure Portal -> App registrations -> New registration
# Required permissions: Microsoft Graph API permissions for reading flows
POWER_AUTOMATE_CLIENT_ID=your_azure_app_client_id_here
POWER_AUTOMATE_CLIENT_SECRET=your_azure_app_client_secret_here
POWER_AUTOMATE_TENANT_ID=your_azure_tenant_id_here
# Microsoft Graph API base URL (usually default is fine)
POWER_AUTOMATE_BASE_URL=https://graph.microsoft.com/v1.0

# ===============================================================================
# Snowflake Configuration
# ===============================================================================
# Snowflake account identifier (e.g., CURALEAF-CURAPROD.snowflakecomputing.com)
SNOWFLAKE_ACCOUNT=CURALEAF-CURAPROD.snowflakecomputing.com
# Snowflake username
SNOWFLAKE_USER=your_snowflake_username
# Snowflake password
SNOWFLAKE_PASSWORD=your_snowflake_password
# Database where job status will be stored
SNOWFLAKE_DATABASE=DEV_POWERAPPS
# Schema for audit job hub
SNOWFLAKE_SCHEMA=AUDIT_JOB_HUB
# Warehouse to use for operations
SNOWFLAKE_WAREHOUSE=COMPUTE_WH
# Optional: Role to use (if not specified, uses default role)
SNOWFLAKE_ROLE=your_role_here

# ===============================================================================
# Email Configuration (Outlook/Microsoft Graph)
# ===============================================================================
# Azure AD App Registration for Outlook API
# Get from: Azure Portal -> App registrations -> New registration
# Required permissions: Microsoft Graph API permissions for sending emails
OUTLOOK_CLIENT_ID=your_outlook_app_client_id_here
OUTLOOK_CLIENT_SECRET=your_outlook_app_client_secret_here
OUTLOOK_TENANT_ID=your_azure_tenant_id_here

# ===============================================================================
# Application Configuration
# ===============================================================================
# Environment: development, staging, production
APP_ENV=development
# Logging level: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO
# Enable debug mode (true/false)
DEBUG=false

# ===============================================================================
# Monitoring Configuration
# ===============================================================================
# How often to run monitoring (in minutes)
MONITORING_INTERVAL_MINUTES=15
# Timeout for health checks (in seconds)
HEALTH_CHECK_TIMEOUT_SECONDS=30
# Maximum number of retries for failed API calls
MAX_RETRIES=3
# Delay between retries (in seconds)
RETRY_DELAY_SECONDS=5

# ===============================================================================
# API Setup Instructions
# ===============================================================================

# AIRBYTE SETUP:
# 1. Log into your Airbyte instance
# 2. Go to Settings -> Account -> Applications
# 3. Click "Create Access Token"
# 4. Copy the token and set it as AIRBYTE_API_KEY

# DATABRICKS SETUP:
# 1. Log into your Databricks workspace
# 2. Click on your user profile -> User Settings
# 3. Go to Access Tokens tab
# 4. Click "Generate New Token"
# 5. Copy the token and set it as DATABRICKS_API_KEY

# POWER AUTOMATE SETUP:
# 1. Go to Azure Portal (portal.azure.com)
# 2. Navigate to App registrations
# 3. Click "New registration"
# 4. Set redirect URI and note down Client ID, Tenant ID
# 5. Go to Certificates & secrets -> New client secret
# 6. Grant API permissions: Microsoft Graph -> Application permissions:
#    - Flow.Read.All (to read Power Automate flows)
#    - Directory.Read.All (to read directory info)

# SNOWFLAKE SETUP:
# 1. Ensure you have a user account with access to DEV_POWERAPPS database
# 2. Verify AUDIT_JOB_HUB schema exists or will be created
# 3. User needs INSERT/UPDATE permissions on the schema

# OUTLOOK SETUP:
# 1. Go to Azure Portal (portal.azure.com)
# 2. Navigate to App registrations
# 3. Click "New registration"
# 4. Set redirect URI and note down Client ID, Tenant ID
# 5. Go to Certificates & secrets -> New client secret
# 6. Grant API permissions: Microsoft Graph -> Application permissions:
#    - Mail.Send (to send emails)
#    - User.Read.All (to read user info)